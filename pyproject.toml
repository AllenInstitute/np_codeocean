[tool.pdm]

[project]
name = "np_codeocean"
version = "0.1.8"
description = "Tools for uploading and interacting with Mindscope Neuropixels experiments on Code Ocean"
authors = [
    { name = "Ben Hardcastle", email = "ben.hardcastle@alleninstitute.org" },
    { name = "Chris Mochizuki", email = "chrism@alleninstitute.org" },
    { name = "Arjun Sridhar", email = "arjun.sridhar@alleninstitute.org" },
]
dependencies = [
    "np_session>=0.6.44",
    "np-tools>=0.1.23",
    "np-config>=0.4.33",
    "requests>=2.31.0",
    "npc-session>=0.1.34",
    "polars>=0.20.16",
    "aind-data-transfer-models>=0.5.1",
    "npc-lims>=0.1.168",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]
[project.urls]
Source = "https://github.com/AllenInstitute/np_codeocean"
Issues = "https://github.com/AllenInstitute/np_codeocean/issues"

[project.scripts]
"upload_dr_behavior" = "np_codeocean.scripts.upload_dynamic_routing_behavior:main"
"upload_dr_ecephys" = "np_codeocean.scripts.upload_dynamic_routing_ecephys:main"
"upload_sessions" = "np_codeocean.scripts.upload_sessions:main"

[project.optional-dependencies]
dev = [
    "bump>=1.3.2",
    "pdm>=2.4.9",
    # "blue>=0.9.1",
    # "pytest>=7.2.2",
    # "mypy>=1.1.1",
    # "coverage[toml]>=7.2.2",
    # "pytest-cov>=4.0.0",
    # "types-backports>=0.1.3",
    # "ruff>=0.0.260",
]
dynamic-routing-metadata = [
    "np-aind-metadata==0.1.16",
    "npc-lims>=0.1.154",
    "npc-sessions>=0.0.226",
]

[tool.pdm.scripts]
# usage: pdm run <script> [args]
ruff = "ruff --fix src"
blue = "blue src"
pytest = "pytest --cov"
prebuild = { composite = ["blue", "ruff", "pytest"] }
bump = "bump -p pyproject.toml"
build = { composite = ["prebuild", "pdm build"] }
dry-run = { composite = [
    "prebuild",
    "pdm build",
    "pdm publish --no-build --repository https://test.pypi.org/simple",
] }
publish = { composite = [
    "prebuild",
    "bump",
    "pdm build",
    "pdm publish --no-build",
] }
pub = { composite = ["bump", "pdm publish"] }

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
